{"version":3,"sources":["./src/app/people-list-view/people.module.ts","./src/app/person-detail-view/person-detail-view.component.ts","./src/app/person-detail-view/person-detail-view.component.html","./src/app/people-list-view/people-routing.module.ts","./src/app/people-list-view/people-list-view.component.ts","./src/app/people-list-view/people-list-view.component.html"],"names":[],"mappings":"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","file":"people-list-view-people-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PersonDetailViewComponent } from '../person-detail-view/person-detail-view.component';\r\nimport { PeopleListViewComponent } from './people-list-view.component';\r\nimport { SwapiService } from '../services/swapi.service';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { PeopleRoutingModule } from './people-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [PeopleListViewComponent, PersonDetailViewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    PeopleRoutingModule\r\n  ],\r\n  providers: [\r\n    SwapiService\r\n  ],\r\n  exports: [\r\n    PeopleListViewComponent\r\n  ]\r\n})\r\nexport class PeopleModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from '../app.state';\r\nimport { SwapiService } from '../services/swapi.service';\r\nimport { Person } from '../shared/models/person.interface';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-person-detail-view',\r\n  templateUrl: './person-detail-view.component.html',\r\n  styleUrls: ['./person-detail-view.component.css']\r\n})\r\nexport class PersonDetailViewComponent implements OnInit {\r\n\r\n  person$: Observable<Person>;\r\n  url: string;\r\n\r\n  constructor(\r\n    private swapiService: SwapiService,\r\n    private store: Store<AppState>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store.pipe(\r\n      select('url'),\r\n      take(1)\r\n    ).subscribe(state => this.url = state);\r\n\r\n    this.person$ = this.swapiService.getPerson(this.url);\r\n  }\r\n\r\n}\r\n","<div class=\"attribute-list\" *ngIf=\"person$ | async as p; else loading\">\r\n  <ul class=\"list\" *ngIf=\"person$ | async as p; else loading\">\r\n        <h1 class=\"name\">{{ p.name }}</h1>\r\n        <span class=\"attribute\">Birth Year: </span><span class=\"value\">{{ p.birth_year }}</span>\r\n        <p><span class=\"attribute\">Gender: </span><span class=\"value\">{{ p.gender }}</span></p>\r\n        <p><span class=\"attribute\">Hair Color: </span><span class=\"value\">{{ p.hair_color }}</span></p>\r\n        <p><span class=\"attribute\">Height: </span><span class=\"value\">{{ p.height }}</span></p>\r\n        <p><span class=\"attribute\">Mass: </span><span class=\"value\">{{ p.mass }}</span></p>\r\n        <p><span class=\"attribute\">Skin Color: </span><span class=\"value\">{{ p.skin_color }}</span></p>\r\n  </ul>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <mat-spinner class=\"loading\" [diameter]=\"50\"></mat-spinner>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { PersonDetailViewComponent } from '../person-detail-view/person-detail-view.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PeopleListViewComponent } from './people-list-view.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: PeopleListViewComponent },\r\n  { path: ':name', component: PersonDetailViewComponent },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(ROUTES),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class PeopleRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Person } from '../shared/models/person.interface';\r\nimport { SwapiService } from '../services/swapi.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../app.state';\r\n\r\n@Component({\r\n  selector: 'app-people-list-view',\r\n  templateUrl: './people-list-view.component.html',\r\n  styleUrls: ['./people-list-view.component.css']\r\n})\r\nexport class PeopleListViewComponent implements OnInit {\r\n\r\n  people$: Observable<Person[]>;\r\n  people: Person[];\r\n  url: Observable<string>;\r\n\r\n  constructor(\r\n    private swapiService: SwapiService,\r\n    private router: Router,\r\n    private store: Store<AppState>\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.url = this.store.select('url');\r\n    this.swapiService.getPeople().subscribe(\r\n      (response) => this.people = response.results\r\n    );\r\n  }\r\n\r\n  onSelect(person: Person): void {\r\n    this.store.dispatch({\r\n      type: 'SET_URL',\r\n      payload: person.url\r\n    });\r\n    this.router.navigateByUrl(`/people/` + person.name);\r\n  }\r\n}\r\n","<app-list-view\r\n  [data]=\"people\"\r\n  (selected)=\"onSelect($event)\"\r\n></app-list-view>\r\n"],"sourceRoot":"webpack:///"}