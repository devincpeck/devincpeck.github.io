{"version":3,"sources":["./src/app/movies-list-view/movies-list-view.component.ts","./src/app/movies-list-view/movies-list-view.component.html","./src/app/movie-detail-view/movie-detail-view.component.ts","./src/app/movie-detail-view/movie-detail-view.component.html","./src/app/movies-list-view/movies.module.ts","./src/app/movies-list-view/movies-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAa3C,MAAM,uBAAuB;IAOlC,YACU,KAAsB,EACtB,MAAc,EACd,YAA0B;QAF1B,UAAK,GAAL,KAAK,CAAiB;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;IAChC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CACrC,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,EAC5C,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EACnB,GAAG,EAAE;YACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;QACrC,CAAC,CACF,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACH,iBAAiB,CAAC,MAAe;QAC/B,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,GAAG,CAClC,CAAC,CAAC,EAAE,CAAC,iCACA,CAAC,KACJ,IAAI,EAAE,CAAC,CAAC,KAAK,IACb,CACH,CAAC;QACF,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClB,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,KAAK,CAAC,GAAG;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;;8FA/CU,uBAAuB;uGAAvB,uBAAuB;QCbpC,mFAGC;QADC,kKAAY,oBAAgB,IAAC;QAC9B,4DAAgB;;QAFf,wFAA2B;;6FDYhB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AAEN;;;;;;ICFpC,wEACM;IAAA,wEAAiB;IAAA,uDAAa;IAAA,4DAAK;IACnC,0EAAwB;IAAA,qEAAU;IAAA,4DAAO;IAAA,0EAAoB;IAAA,uDAAgB;IAAA,4DAAO;IACpF,oEAAG;IAAA,0EAAwB;IAAA,wEAAa;IAAA,4DAAO;IAAA,2EAAoB;IAAA,wDAAgB;IAAA,4DAAO;IAAA,4DAAI;IAC9F,qEAAG;IAAA,2EAAwB;IAAA,0EAAc;IAAA,4DAAO;IAAA,2EAAoB;IAAA,wDAAoB;IAAA,4DAAO;IAAA,4DAAI;IACzG,4DAAK;;;IAJkB,0DAAa;IAAb,2EAAa;IAC+B,0DAAgB;IAAhB,8EAAgB;IACV,0DAAgB;IAAhB,8EAAgB;IACf,0DAAoB;IAApB,kFAAoB;;;IALhG,yEACE;IAAA,yHAKK;;IACP,4DAAM;;;;IANc,0DAAqB;IAArB,gJAAqB;;;IASvC,4EAA2D;;IAA9B,wEAAe;;ADGvC,MAAM,wBAAwB;IAKnC,YACU,KAAsB,EACtB,YAA0B;QAD1B,UAAK,GAAL,KAAK,CAAiB;QACtB,iBAAY,GAAZ,YAAY,CAAc;IAChC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,0DAAM,CAAC,KAAK,CAAC,EACb,2DAAI,CAAC,CAAC,CAAC,CACR,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;QAEvC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrD,CAAC;;gGAjBU,wBAAwB;wGAAxB,wBAAwB;QCbrC,oHAOM;;QAEN,gNAEc;;;QAXe,6IAAqB;;6FDarC,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACU;AACF;AACE;AACF;AACgB;AACqB;AAC9B;;AAkBvD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,mBAPZ;QACT,oEAAY;KACb,YATQ;YACP,4DAAY;YACZ,kEAAY;YACZ,sEAAc;YACd,oEAAa;YACb,0EAAmB;SACpB;mIAQU,YAAY,mBAfR,mFAAuB,EAAE,uGAAwB,aAE9D,4DAAY;QACZ,kEAAY;QACZ,sEAAc;QACd,oEAAa;QACb,0EAAmB,aAMnB,mFAAuB;6FAGd,YAAY;cAhBxB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mFAAuB,EAAE,uGAAwB,CAAC;gBACjE,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAY;oBACZ,sEAAc;oBACd,oEAAa;oBACb,0EAAmB;iBACpB;gBACD,SAAS,EAAE;oBACT,oEAAY;iBACb;gBACD,OAAO,EAAE;oBACP,mFAAuB;iBACxB;aACF;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqC;AACrB;;;AAEvE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAuB,EAAE;IAChD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,uGAAwB,EAAE;CACvD;AASM,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBALrB;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B,EACS,4DAAY;mIAEX,mBAAmB,uFAFpB,4DAAY;6FAEX,mBAAmB;cAP/B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC9B;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB","file":"movies-list-view-movies-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from '../app.state';\r\nimport { SwapiService } from '../services/swapi.service';\r\nimport { Movie, MoviePresentation } from '../shared/models/movie.interface';\r\n\r\n@Component({\r\n  selector: 'app-movies-list-view',\r\n  templateUrl: './movies-list-view.component.html',\r\n  styleUrls: ['./movies-list-view.component.css']\r\n})\r\nexport class MoviesListViewComponent implements OnInit {\r\n\r\n  movies$: Observable<Movie[]>;\r\n  movies: Movie[];\r\n  moviesPresentation: MoviePresentation[];\r\n  url: Observable<string>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private router: Router,\r\n    private swapiService: SwapiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.url = this.store.select('url');\r\n    this.swapiService.getMovies().subscribe(\r\n      (response) => this.movies = response.results,\r\n      e => console.log(e),\r\n      () => {\r\n        this.mapToPresentation(this.movies)\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Maps movie.title attribute to moviePresentation.name.\r\n   * Basically just used so that the ListViewComponent's table can be reusable as it displays {{ element.name }}.\r\n   *\r\n   * @param movies the movies returned from the http request\r\n   * @returns a list of movies in presentation format\r\n   */\r\n  mapToPresentation(movies: Movie[]): MoviePresentation[] {\r\n    this.moviesPresentation = movies.map(\r\n      m => ({\r\n        ...m,\r\n        name: m.title,\r\n      })\r\n    );\r\n    return this.moviesPresentation;\r\n  }\r\n\r\n  onSelect(movie: Movie): void {\r\n    this.store.dispatch({\r\n      type: 'SET_URL',\r\n      payload: movie.url\r\n    });\r\n    this.router.navigateByUrl(`/movies/` + movie.title);\r\n  }\r\n}\r\n","<app-list-view\r\n  [data]=\"moviesPresentation\"\r\n  (selected)=\"onSelect($event)\"\r\n></app-list-view>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { AppState } from '../app.state';\r\nimport { SwapiService } from '../services/swapi.service';\r\nimport { Movie } from '../shared/models/movie.interface';\r\n\r\n@Component({\r\n  selector: 'app-movie-detail-view',\r\n  templateUrl: './movie-detail-view.component.html',\r\n  styleUrls: ['./movie-detail-view.component.css']\r\n})\r\nexport class MovieDetailViewComponent implements OnInit {\r\n\r\n  url: string;\r\n  movie$: Observable<Movie>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private swapiService: SwapiService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store.pipe(\r\n      select('url'),\r\n      take(1)\r\n    ).subscribe(state => this.url = state);\r\n\r\n    this.movie$ = this.swapiService.getMovie(this.url);\r\n  }\r\n\r\n}\r\n","<div class=\"attribute-list\" *ngIf=\"movie$ | async as p; else loading\">\r\n  <ul class=\"list\" *ngIf=\"movie$ | async as p; else loading\">\r\n        <h1 class=\"name\">{{ p.title }}</h1>\r\n        <span class=\"attribute\">Director: </span><span class=\"value\">{{ p.director }}</span>\r\n        <p><span class=\"attribute\">Producer(s): </span><span class=\"value\">{{ p.producer }}</span></p>\r\n        <p><span class=\"attribute\">Release Date: </span><span class=\"value\">{{ p.release_date }}</span></p>\r\n  </ul>\r\n</div>\r\n\r\n<ng-template #loading>\r\n  <mat-spinner class=\"loading\" [diameter]=\"50\"></mat-spinner>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SwapiService } from '../services/swapi.service';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MoviesListViewComponent } from './movies-list-view.component';\r\nimport { MovieDetailViewComponent } from '../movie-detail-view/movie-detail-view.component';\r\nimport { MoviesRoutingModule } from './movies-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [MoviesListViewComponent, MovieDetailViewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MoviesRoutingModule\r\n  ],\r\n  providers: [\r\n    SwapiService\r\n  ],\r\n  exports: [\r\n    MoviesListViewComponent\r\n  ]\r\n})\r\nexport class MoviesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MovieDetailViewComponent } from '../movie-detail-view/movie-detail-view.component';\r\nimport { MoviesListViewComponent } from './movies-list-view.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: MoviesListViewComponent },\r\n  { path: ':name', component: MovieDetailViewComponent },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(ROUTES),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class MoviesRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}